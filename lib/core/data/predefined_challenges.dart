import 'package:kidsdo/domain/entities/challenge.dart';
import 'package:kidsdo/data/models/challenge_model.dart'; // Asegúrate de que esta ruta es correcta
import 'package:get/get.dart';

/// Biblioteca de retos predefinidos por categoría
class PredefinedChallenges {
  /// Retos de higiene personal
  static final List<Challenge> hygieneList = [
    ChallengeModel(
      id: 'hygiene_teeth_morning',
      title: 'challenge_hygiene_teeth_morning_title'.tr,
      description: 'challenge_hygiene_teeth_morning_description'.tr,
      titleKey: 'challenge_hygiene_teeth_morning_title',
      descriptionKey: 'challenge_hygiene_teeth_morning_description',
      category: ChallengeCategory.hygiene,
      points: 10,
      frequency: ChallengeFrequency.daily,
      ageRange: const {'min': 3, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'tooth_brush',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'hygiene_teeth_night',
      title: 'challenge_hygiene_teeth_night_title'.tr,
      description: 'challenge_hygiene_teeth_night_description'.tr,
      titleKey: 'challenge_hygiene_teeth_night_title',
      descriptionKey: 'challenge_hygiene_teeth_night_description',
      category: ChallengeCategory.hygiene,
      points: 10,
      frequency: ChallengeFrequency.daily,
      ageRange: const {'min': 3, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'tooth_brush',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'hygiene_bath',
      title: 'challenge_hygiene_bath_title'.tr,
      description: 'challenge_hygiene_bath_description'.tr,
      titleKey: 'challenge_hygiene_bath_title',
      descriptionKey: 'challenge_hygiene_bath_description',
      category: ChallengeCategory.hygiene,
      points: 15,
      frequency: ChallengeFrequency.daily,
      ageRange: const {'min': 5, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'shower',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'hygiene_hands',
      title: 'challenge_hygiene_hands_title'.tr,
      description: 'challenge_hygiene_hands_description'.tr,
      titleKey: 'challenge_hygiene_hands_title',
      descriptionKey: 'challenge_hygiene_hands_description',
      category: ChallengeCategory.hygiene,
      points: 5,
      frequency: ChallengeFrequency.daily,
      ageRange: const {'min': 3, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'soap',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'hygiene_hair',
      title: 'challenge_hygiene_hair_title'.tr,
      description: 'challenge_hygiene_hair_description'.tr,
      titleKey: 'challenge_hygiene_hair_title',
      descriptionKey: 'challenge_hygiene_hair_description',
      category: ChallengeCategory.hygiene,
      points: 5,
      frequency: ChallengeFrequency.daily,
      ageRange: const {'min': 5, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'hair_brush',
      duration: ChallengeDuration.weekly,
    ),
  ];

  /// Retos escolares
  static final List<Challenge> schoolList = [
    ChallengeModel(
      id: 'school_homework',
      title: 'challenge_school_homework_title'.tr,
      description: 'challenge_school_homework_description'.tr,
      titleKey: 'challenge_school_homework_title',
      descriptionKey: 'challenge_school_homework_description',
      category: ChallengeCategory.school,
      points: 20,
      frequency: ChallengeFrequency.daily,
      ageRange: const {'min': 6, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'book',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'school_reading',
      title: 'challenge_school_reading_title'.tr,
      description: 'challenge_school_reading_description'.tr,
      titleKey: 'challenge_school_reading_title',
      descriptionKey: 'challenge_school_reading_description',
      category: ChallengeCategory.school,
      points: 15,
      frequency: ChallengeFrequency.daily,
      ageRange: const {'min': 6, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'book_open',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'school_backpack',
      title: 'challenge_school_backpack_title'.tr,
      description: 'challenge_school_backpack_description'.tr,
      titleKey: 'challenge_school_backpack_title',
      descriptionKey: 'challenge_school_backpack_description',
      category: ChallengeCategory.school,
      points: 10,
      frequency: ChallengeFrequency.daily,
      ageRange: const {'min': 6, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'backpack',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'school_good_grade',
      title: 'challenge_school_good_grade_title'.tr,
      description: 'challenge_school_good_grade_description'.tr,
      titleKey: 'challenge_school_good_grade_title',
      descriptionKey: 'challenge_school_good_grade_description',
      category: ChallengeCategory.school,
      points: 30,
      frequency: ChallengeFrequency.once,
      ageRange: const {'min': 6, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'star',
      duration: ChallengeDuration.weekly,
    ),
  ];

  /// Retos de orden
  static final List<Challenge> orderList = [
    ChallengeModel(
      id: 'order_bed',
      title: 'challenge_order_bed_title'.tr,
      description: 'challenge_order_bed_description'.tr,
      titleKey: 'challenge_order_bed_title',
      descriptionKey: 'challenge_order_bed_description',
      category: ChallengeCategory.order,
      points: 10,
      frequency: ChallengeFrequency.daily,
      ageRange: const {'min': 5, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'bed',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'order_toys',
      title: 'challenge_order_toys_title'.tr,
      description: 'challenge_order_toys_description'.tr,
      titleKey: 'challenge_order_toys_title',
      descriptionKey: 'challenge_order_toys_description',
      category: ChallengeCategory.order,
      points: 10,
      frequency: ChallengeFrequency.daily,
      ageRange: const {'min': 3, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'toys',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'order_room',
      title: 'challenge_order_room_title'.tr,
      description: 'challenge_order_room_description'.tr,
      titleKey: 'challenge_order_room_title',
      descriptionKey: 'challenge_order_room_description',
      category: ChallengeCategory.order,
      points: 25,
      frequency: ChallengeFrequency.weekly,
      ageRange: const {'min': 5, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'room',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'order_clothes',
      title: 'challenge_order_clothes_title'.tr,
      description: 'challenge_order_clothes_description'.tr,
      titleKey: 'challenge_order_clothes_title',
      descriptionKey: 'challenge_order_clothes_description',
      category: ChallengeCategory.order,
      points: 10,
      frequency: ChallengeFrequency.daily,
      ageRange: const {'min': 6, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'tshirt',
      duration: ChallengeDuration.weekly,
    ),
  ];

  /// Retos de responsabilidad
  static final List<Challenge> responsibilityList = [
    ChallengeModel(
      id: 'responsibility_schedule',
      title: 'challenge_responsibility_schedule_title'.tr,
      description: 'challenge_responsibility_schedule_description'.tr,
      titleKey: 'challenge_responsibility_schedule_title',
      descriptionKey: 'challenge_responsibility_schedule_description',
      category: ChallengeCategory.responsibility,
      points: 15,
      frequency: ChallengeFrequency.daily,
      ageRange: const {'min': 6, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'clock',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'responsibility_alarm',
      title: 'challenge_responsibility_alarm_title'.tr,
      description: 'challenge_responsibility_alarm_description'.tr,
      titleKey: 'challenge_responsibility_alarm_title',
      descriptionKey: 'challenge_responsibility_alarm_description',
      category: ChallengeCategory.responsibility,
      points: 10,
      frequency: ChallengeFrequency.daily,
      ageRange: const {'min': 8, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'alarm',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'responsibility_pet',
      title: 'challenge_responsibility_pet_title'.tr,
      description: 'challenge_responsibility_pet_description'.tr,
      titleKey: 'challenge_responsibility_pet_title',
      descriptionKey: 'challenge_responsibility_pet_description',
      category: ChallengeCategory.responsibility,
      points: 15,
      frequency: ChallengeFrequency.daily,
      ageRange: const {'min': 6, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'pet',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'responsibility_plant',
      title: 'challenge_responsibility_plant_title'.tr,
      description: 'challenge_responsibility_plant_description'.tr,
      titleKey: 'challenge_responsibility_plant_title',
      descriptionKey: 'challenge_responsibility_plant_description',
      category: ChallengeCategory.responsibility,
      points: 10,
      frequency: ChallengeFrequency.weekly,
      ageRange: const {'min': 5, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'plant',
      duration: ChallengeDuration.weekly,
    ),
  ];

  /// Retos de ayuda doméstica
  static final List<Challenge> helpList = [
    ChallengeModel(
      id: 'help_table',
      title: 'challenge_help_table_title'.tr,
      description: 'challenge_help_table_description'.tr,
      titleKey: 'challenge_help_table_title',
      descriptionKey: 'challenge_help_table_description',
      category: ChallengeCategory.help,
      points: 10,
      frequency: ChallengeFrequency.daily,
      ageRange: const {'min': 5, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'cutlery',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'help_dishes',
      title: 'challenge_help_dishes_title'.tr,
      description: 'challenge_help_dishes_description'.tr,
      titleKey: 'challenge_help_dishes_title',
      descriptionKey: 'challenge_help_dishes_description',
      category: ChallengeCategory.help,
      points: 10,
      frequency: ChallengeFrequency.daily,
      ageRange: const {'min': 5, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'dishes',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'help_trash',
      title: 'challenge_help_trash_title'.tr,
      description: 'challenge_help_trash_description'.tr,
      titleKey: 'challenge_help_trash_title',
      descriptionKey: 'challenge_help_trash_description',
      category: ChallengeCategory.help,
      points: 10,
      frequency: ChallengeFrequency.weekly,
      ageRange: const {'min': 8, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'trash',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'help_groceries',
      title: 'challenge_help_groceries_title'.tr,
      description: 'challenge_help_groceries_description'.tr,
      titleKey: 'challenge_help_groceries_title',
      descriptionKey: 'challenge_help_groceries_description',
      category: ChallengeCategory.help,
      points: 15,
      frequency: ChallengeFrequency.weekly,
      ageRange: const {'min': 6, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'grocery',
      duration: ChallengeDuration.weekly,
    ),
  ];

  /// Retos para eventos especiales
  static final List<Challenge> specialList = [
    ChallengeModel(
      id: 'special_garden',
      title: 'challenge_special_garden_title'.tr,
      description: 'challenge_special_garden_description'.tr,
      titleKey: 'challenge_special_garden_title',
      descriptionKey: 'challenge_special_garden_description',
      category: ChallengeCategory.special,
      points: 20,
      frequency: ChallengeFrequency.weekly,
      ageRange: const {'min': 6, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'garden',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'special_recycle',
      title: 'challenge_special_recycle_title'.tr,
      description: 'challenge_special_recycle_description'.tr,
      titleKey: 'challenge_special_recycle_title',
      descriptionKey: 'challenge_special_recycle_description',
      category: ChallengeCategory.special,
      points: 15,
      frequency: ChallengeFrequency.weekly,
      ageRange: const {'min': 5, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'recycle',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'special_holiday',
      title: 'challenge_special_holiday_title'.tr,
      description: 'challenge_special_holiday_description'.tr,
      titleKey: 'challenge_special_holiday_title',
      descriptionKey: 'challenge_special_holiday_description',
      category: ChallengeCategory.special,
      points: 25,
      frequency: ChallengeFrequency.once,
      ageRange: const {'min': 4, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'party',
      duration: ChallengeDuration.weekly,
    ),
  ];

  /// Retos para hermanos
  static final List<Challenge> siblingList = [
    ChallengeModel(
      id: 'sibling_share',
      title: 'challenge_sibling_share_title'.tr,
      description: 'challenge_sibling_share_description'.tr,
      titleKey: 'challenge_sibling_share_title',
      descriptionKey: 'challenge_sibling_share_description',
      category: ChallengeCategory.sibling,
      points: 15,
      frequency: ChallengeFrequency.daily,
      ageRange: const {'min': 3, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'share',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'sibling_play',
      title: 'challenge_sibling_play_title'.tr,
      description: 'challenge_sibling_play_description'.tr,
      titleKey: 'challenge_sibling_play_title',
      descriptionKey: 'challenge_sibling_play_description',
      category: ChallengeCategory.sibling,
      points: 15,
      frequency: ChallengeFrequency.daily,
      ageRange: const {'min': 3, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'play',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'sibling_help',
      title: 'challenge_sibling_help_title'.tr,
      description: 'challenge_sibling_help_description'.tr,
      titleKey: 'challenge_sibling_help_title',
      descriptionKey: 'challenge_sibling_help_description',
      category: ChallengeCategory.sibling,
      points: 20,
      frequency: ChallengeFrequency.daily,
      ageRange: const {'min': 6, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'help',
      duration: ChallengeDuration.weekly,
    ),
    ChallengeModel(
      id: 'sibling_conflict',
      title: 'challenge_sibling_conflict_title'.tr,
      description: 'challenge_sibling_conflict_description'.tr,
      titleKey: 'challenge_sibling_conflict_title',
      descriptionKey: 'challenge_sibling_conflict_description',
      category: ChallengeCategory.sibling,
      points: 25,
      frequency: ChallengeFrequency.once,
      ageRange: const {'min': 6, 'max': 12},
      isTemplate: true,
      createdBy: 'system',
      createdAt: DateTime.now(),
      icon: 'handshake',
      duration: ChallengeDuration.weekly,
    ),
  ];

  /// Obtiene todos los retos predefinidos
  static List<Challenge> getAll() {
    return [
      ...hygieneList,
      ...schoolList,
      ...orderList,
      ...responsibilityList,
      ...helpList,
      ...specialList,
      ...siblingList,
    ];
  }

  /// Obtiene retos por categoría
  static List<Challenge> getByCategory(ChallengeCategory category) {
    switch (category) {
      case ChallengeCategory.hygiene:
        return hygieneList;
      case ChallengeCategory.school:
        return schoolList;
      case ChallengeCategory.order:
        return orderList;
      case ChallengeCategory.responsibility:
        return responsibilityList;
      case ChallengeCategory.help:
        return helpList;
      case ChallengeCategory.special:
        return specialList;
      case ChallengeCategory.sibling:
        return siblingList;
    }
  }

  /// Obtiene retos por rango de edad
  static List<Challenge> getByAgeRange(int age) {
    return getAll().where((challenge) {
      final minAge = challenge.ageRange['min'] as int;
      final maxAge = challenge.ageRange['max'] as int;
      return age >= minAge && age <= maxAge;
    }).toList();
  }
}
